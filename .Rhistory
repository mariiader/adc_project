if (vec2>0){
zwei <- zwei - vec2
} else {
zwei <- zwei + abs(vec2)
}
print(c(eins, zwei))
print(f0(eins,zwei))
i <- i+1
}
}
calc(0,0,0.2)
calc <- function(x,y,rate){
eins <- x
zwei <- y
i <- 0
while (i<20) {
print(f0(eins,zwei))
vec1 <- f1(eins, zwei)*rate
vec2 <- f2(eins, zwei)*rate
if (vec1>0){
eins <- eins - vec1
} else {
eins <- eins + abs(vec1)
}
if (vec2>0){
zwei <- zwei - vec2
} else {
zwei <- zwei + abs(vec2)
}
print(c(eins, zwei))
i <- i+1
}
}
calc(0,0,0.2)
f1 <- function(x,y){
a <- 4*x - 2
return(a)
}
f2 <- function(x,y){
b <- 2*y - 1
return(b)
}
calc(0,0,0.2)
calc <- function(x,y,rate){
eins <- x
zwei <- y
i <- 0
while (i<20) {
vec1 <- f1(eins, zwei)*rate
vec2 <- f2(eins, zwei)*rate
if (vec1>0){
eins <- eins - vec1
} else {
eins <- eins + abs(vec1)
}
if (vec2>0){
zwei <- zwei - vec2
} else {
zwei <- zwei + abs(vec2)
}
print(c(i, f0(eins, zwei), eins, zwei))
i <- i+1
}
}
calc(0,0,0.2)
calc <- function(x,y,rate){
eins <- x
zwei <- y
i <- 0
while (i<20) {
vec1 <- f1(eins, zwei)*rate
vec2 <- f2(eins, zwei)*rate
if (vec1>0){
eins <- eins - vec1
} else {
eins <- eins + abs(vec1)
}
if (vec2>0){
zwei <- zwei - vec2
} else {
zwei <- zwei + abs(vec2)
}
print(c(i, f0(eins, zwei), eins, zwei, vec1, vec2))
i <- i+1
}
}
calc(0,0,0.2)
seq(0.5,4.5,0.5)
seq(0.5,4.5,0.5)^2
exp((-(1)^2)/0.5)
exp((-(0)^2)/0.5)
library(MASS)
val1 <- c(1,1,1,1,1,exp(-2), exp(-2),  exp(-4),  exp(-4),  exp(-2),  exp(-2), 1)
matr <- matrix(val1, nrow=4, ncol=3)
matr
ginv(matr)
pi1 <- ginv(matr) #MPPI
matr1 <- matrix(val1, nrow=4, ncol=3)
out1m <- matrix(out1, nrow=4, ncol=1)
out1 <- c(1,0,0,1)
out1m <- matrix(out1, nrow=4, ncol=1)
pi1 %*% out1m
out1 <- c(0,0,0,1)
out1m <- matrix(out1, nrow=4, ncol=1)
pi1 %*% out1m
rm(matr)
val2 <- c(1,1,1,1, exp(-4), exp(-2), exp(-2),  1)
matr2 <- matrix(val2, nrow=4, ncol=2)
pi2 <- ginv(matr2) #MPPI
pi2
pi2 %*% out1m
step <- pi2 %*% out1m
step <- step %*% out1m
step
exp(-4)
50/16
exp(-(8/25))
k <- exp(-(8/25))
l <- exp(-(32/25))
val1 <- c(1,1,1,1,1, k, 1, l, k, k, l, 1, k)
out1 <- c(0,1,1,0)
matr1 <- matrix(val1, nrow=4, ncol=3)
out1m <- matrix(out1, nrow=4, ncol=1)
val1 <- c(1,1,1,1, k, 1, l, k, k, l, 1, k)
matr1 <- matrix(val1, nrow=4, ncol=3)
out1m <- matrix(out1, nrow=4, ncol=1)
pi1 <- ginv(matr1)
pi1 %*% out1m
pi1
val2 <- c(1,1,1,1, k, 1, 1, k)
matr2 <- matrix(val2, nrow=4, ncol=2)
pi2 <- ginv(matr2) #MPPI
step <- pi2 %*% out1m
step
pi2
file1 <- data.frame()
file1$A <- rnorm(10,0,1)
file1 <- data.frame(matrix(vector(), 10, 10, dimnames=list(c(),c("A","B","C","D","E","F","G","H","I","J"))),
stringsAsFactors = F)
rnorm(10,0,1)
file1$A <- rnorm(10,0,1)
file1$A <- rnorm(10,0,1)
file1$B <- rnorm(10,1,1)
file1$C <- rnorm(10,2,1)
file1$D <- rnorm(10,3,1)
file1$E <- rnorm(10,4,1)
file1$F <- rnorm(10,5,1)
file1$G <- rnorm(10,6,1)
file1$H <- rnorm(10,7,1)
file1$I <- rnorm(10,8,1)
file1$J <- rnorm(10,9,1)
file2 <- data.frame(matrix(vector(), 10, 10, dimnames=list(c(),c("A","B","C","D","E","F","G","H","I","J"))),
stringsAsFactors = F)
file2$A <- rnorm(10,0,1)
file2$B <- rnorm(10,1,1)
file2$C <- rnorm(10,2,1)
file2$D <- rnorm(10,3,1)
file2$E <- rnorm(10,4,1)
file2$F <- rnorm(10,5,1)
file2$G <- rnorm(10,6,1)
file2$H <- rnorm(10,7,1)
file2$I <- rnorm(10,8,1)
file2$J <- rnorm(10,9,1)
write.csv(file1,
"C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/MA-Arbeit/GitRepo/umbrella/src/test/resources/data/example/file1.csv",
sep=",")
write.csv(file1,
"C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/MA-Arbeit/GitRepo/umbrella/src/test/resources/data/example/file1.csv",
row.names = F)
write.csv(file2,
"C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/MA-Arbeit/GitRepo/umbrella/src/test/resources/data/example/file2.csv",
row.names = F)
write.csv(file3,
"C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/MA-Arbeit/GitRepo/umbrella/src/test/resources/data/example/file3.csv",
row.names = F)
file3 <- data.frame(matrix(vector(), 10, 10, dimnames=list(c(),c("A1","B2","C3","D4","E5","F6","G7","H8","I9","J0"))),
stringsAsFactors = F)
file3$A1 <- rnorm(10,0,1)
file3$B2 <- rnorm(10,1,1)
file3$C3 <- rnorm(10,2,1)
file3$D4 <- rnorm(10,3,1)
file3$E5 <- rnorm(10,4,1)
file3$F6 <- rnorm(10,5,1)
file3$G7 <- rnorm(10,6,1)
file3$H8 <- rnorm(10,7,1)
file3$I9 <- rnorm(10,8,1)
file3$J0 <- rnorm(10,9,1)
write.csv(file3,
"C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/MA-Arbeit/GitRepo/umbrella/src/test/resources/data/example/file3.csv",
row.names = F)
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv")
plot(kernel)
plot(kernel ~ seq(-5,5,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(kernel ~ seq(-5,5,0.1))
length(seq(-5,5,0.1))
plot(kernel$V1 ~ seq(-5,5,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(kernel$V1 ~ seq(-5,5,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(kernel$V1 ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
exp(-744)
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
plot(kernel$V1 ~ seq(-7,7,0.1))
exp(12)
exp(-2.00e+12)
exp(-1.2e+13)
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(kernel$V1 ~ seq(-7,7,0.1))
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
exp(e)
exp(log(3))
log(10)
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
sum(exp(kernel$V1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1)/10 ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(kernel$V1 ~ seq(-7,7,0.1))
sum(exp(kernel$V1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
sum(exp(kernel$V1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
plot(kernel$V1 ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(kernel$V1 ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(kernel$V1 ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(kernel$V1 ~ seq(-7,7,0.1))
2 %% 1.5
2 %% 1.52
14 %% 1.52
rm(kernel)
u1 <- read.csv("C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/MA-Arbeit/GitRepo/umbrella/src/test/resources/data/ucdpged/ged19-release.csv", sep=",")
which(is.na(u1))
u1 <- read.csv("C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/MA-Arbeit/GitRepo/umbrella/src/test/resources/data/ucdpged/ged19-release.csv", sep=",", stringsAsFactors = F)
?write.csv
write.csv(u1, "C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/MA-Arbeit/GitRepo/umbrella/src/test/resources/data/ucdpged/UPged19-release.csv", sep=", ", row.names = FALSE)
############### Data Challenge ###################
##### Preprocessing #####
library(foreign)
library(dplyr)
library(MASS)
library(ggplot2)
library(zoo)
library(forecast)
library(corrgram)
library(dynlm)
library(astsa)
#Import as Time Series
setwd("C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/Challenge/gitRepo/adc_project")
feats <- read.csv(
"./data/dengue_features_train.csv",
sep=",", stringsAsFactors = F)
labels <- read.csv(
"./data/dengue_labels_train.csv",
sep=",", stringsAsFactors = F)
test <- read.csv(
"./data/dengue_features_test.csv",
sep=",", stringsAsFactors = F)
submit <- read.csv(
"./data/submission_format.csv",
sep=",", stringsAsFactors = F)
#Concat
train <- merge(feats, labels, by=c("city","year","weekofyear"), all=TRUE)
rm(feats, labels)
#San Juan
trainSj <- filter(train, city=="sj")
trainSj <- trainSj[with(trainSj, order(year,weekofyear)),]
trainSj$ID <- seq(1, nrow(trainSj), 1)
rownames(trainSj) <- seq(length=nrow(trainSj))
#Iquitos
trainIq <- filter(train, city=="iq")
trainIq <- trainIq[with(trainIq, order(year,weekofyear)),]
trainIq <- trainIq[1:519,]
trainIq$ID <- seq(1, nrow(trainIq), 1)
rownames(trainIq) <- seq(length=nrow(trainIq))
#Test
testSj <- filter(test, city=="sj")
testIq <- filter(test, city=="iq")
testSj <- testSj[with(testSj, order(year,weekofyear)),]
testIq <- testIq[with(testIq, order(year,weekofyear)),]
testSj$ID <- seq(1, nrow(testSj), 1)
testIq$ID <- seq(1, nrow(testIq), 1)
### Zoo ###
zooSj <- read.zoo(trainSj[,1:25],  index.column = 4, format="%Y-%m-%d")
zooIq <- read.zoo(trainIq[,1:25],  index.column = 4, format="%Y-%m-%d")
zooTsj <- read.zoo(testSj[,1:24],  index.column = 4, format="%Y-%m-%d")
zooTiq <- read.zoo(testIq[,1:24],  index.column = 4, format="%Y-%m-%d")
### Missing Values ###
# Probably different imputations for different values #
#sapply(zooSj,function(x){sum(is.na(x))})
zooSjOut <- na.approx(zooSj[,4:23])
zooSjOut <- merge.zoo(zooSj[,1:3], zooSjOut, zooSj[,24])
names(zooSjOut)[24] <- "total_cases"
dfSjOut <- as.data.frame(zooSjOut)
indx <- sapply(dfSjOut, is.factor)
dfSjOut[indx] <- lapply(dfSjOut[indx], function(x) as.numeric(as.character(x)))
dfSjOut$city <- "sj"
#sapply(zooIq,function(x){sum(is.na(x))})
zooIqOut <- na.approx(zooIq[,4:23])
zooIqOut <- merge.zoo(zooIq[,1:3], zooIqOut, zooIq[,24])
names(zooIqOut)[24] <- "total_cases"
dfIqOut <- as.data.frame(zooIqOut)
indx <- sapply(dfIqOut, is.factor)
dfIqOut[indx] <- lapply(dfIqOut[indx], function(x) as.numeric(as.character(x)))
dfIqOut$city <- "iq"
# Zoo for Test
zooTsjOut <- na.approx(zooTsj[,4:23])
zooTiqOut <- na.approx(zooTiq[,4:23])
zooTsjOut <- merge.zoo(zooTsj[,1:3], zooTsjOut)
zooTiqOut <- merge.zoo(zooTiq[,1:3], zooTiqOut)
dfTsjOut <- as.data.frame(zooTsjOut)
dfTiqOut <- as.data.frame(zooTiqOut)
indx <- sapply(dfTsjOut, is.factor)
dfTsjOut[indx] <- lapply(dfTsjOut[indx], function(x) as.numeric(as.character(x)))
dfTsjOut$city <- "sj"
dfTiqOut[indx] <- lapply(dfTiqOut[indx], function(x) as.numeric(as.character(x)))
dfTiqOut$city <- "iq"
rm(indx, zooIq, zooIqOut, zooSj, zooSjOut, zooTiq, zooTiqOut, zooTsj, zooTsjOut)
dfSjOutLag <- cbind(dfSjOut[10:934,14], #precip
dfSjOut[3:927, c(11,17)], #dew humid
dfSjOut[1:925, c(19,22)],  # avg min
dfSjOut[12:936,c(2,3,24)]) # year week total
names(dfSjOutLag)[1] <- "reanalysis_precip_amt_kg_per_m2"
dfIqOutLag <- cbind(dfIqOut[11:515,14], #precip
dfIqOut[4:508, c(11,17)], #dew humid
dfIqOut[1:505, c(19)], # avg
dfIqOut[5:509, c(19)], #min
dfIqOut[15:519,c(2,3,24)]) # year week total
names(dfIqOutLag)[1] <- "reanalysis_precip_amt_kg_per_m2"
names(dfIqOutLag)[4] <- "station_avg_temp_c"
names(dfIqOutLag)[5] <- "station_min_temp_c"
fit <- rpart(total_cases ~ reanalysis_precip_amt_kg_per_m2 + reanalysis_dew_point_temp_k +
reanalysis_specific_humidity_g_per_kg + station_avg_temp_c   +
station_min_temp_c,
method="poisson", data=dfSjOutLag[450:700,], control=rpart.control(minsplit=50, cp=0.001))
treepredSj <- predict(fit, newdata=dfSjOutLag[701:925,])
mean(abs(dfSjOutLag$total_cases[701:925] - treepredSj))
library(rpart)
fit <- rpart(total_cases ~ reanalysis_precip_amt_kg_per_m2 + reanalysis_dew_point_temp_k +
reanalysis_specific_humidity_g_per_kg + station_avg_temp_c   +
station_min_temp_c,
method="poisson", data=dfSjOutLag[450:700,], control=rpart.control(minsplit=50, cp=0.001))
treepredSj <- predict(fit, newdata=dfSjOutLag[701:925,])
mean(abs(dfSjOutLag$total_cases[701:925] - treepredSj))
plotComp(c(dfSjOutLag$total_cases[701:925]),
treepredSj)
plotComp <- function(true, pred){
thisPlot <- ggplot(data = as.data.frame(cbind(true,pred)), aes(x=seq(1,length(pred),1))) +
scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0)) +
geom_line(aes(y=true), color='blue') + geom_line(aes(y=pred), color='red') #+
thisPlot
}
plotComp(c(dfSjOutLag$total_cases[701:925]),
treepredSj)
fit <- rpart(total_cases ~ reanalysis_precip_amt_kg_per_m2 + reanalysis_dew_point_temp_k +
reanalysis_specific_humidity_g_per_kg + station_avg_temp_c   +
station_min_temp_c,
method="poisson", data=dfSjOutLag[400:700,], control=rpart.control(minsplit=50, cp=0.001))
treepredSj <- predict(fit, newdata=dfSjOutLag[701:925,])
mean(abs(dfSjOutLag$total_cases[701:925] - treepredSj))
plotComp(c(dfSjOutLag$total_cases[701:925]),
treepredSj)
mNBIq <- glm.nb(total_cases ~
reanalysis_dew_point_temp_k + #9
reanalysis_specific_humidity_g_per_kg + #9
station_avg_temp_c +  #11
station_min_temp_c, #+  #11
#total_cases_Lag,
data=dfIqOutLag[1:400,])
predNBIq <- predict(mNBIq, dfIqOutLag[401:505,], type ="response")
mean(abs(predNBIq[12:105]-dfIqOutLag$total_cases[401:494]))
plotComp(dfIqOutLag$total_cases[401:494], predNBIq[12:105])
mNBIq <- glm.nb(total_cases ~
reanalysis_dew_point_temp_k + #9
reanalysis_specific_humidity_g_per_kg + #9
station_avg_temp_c +  #11
station_min_temp_c, #+  #11
#total_cases_Lag,
data=dfIqOutLag[200:400,])
predNBIq <- predict(mNBIq, dfIqOutLag[401:505,], type ="response")
mean(abs(predNBIq[12:105]-dfIqOutLag$total_cases[401:494]))
plotComp(dfIqOutLag$total_cases[401:494], predNBIq[12:105])
mNBIq <- glm.nb(total_cases ~
reanalysis_dew_point_temp_k + #9
reanalysis_specific_humidity_g_per_kg + #9
station_avg_temp_c +  #11
station_min_temp_c, #+  #11
#total_cases_Lag,
data=dfIqOutLag[100:400,])
predNBIq <- predict(mNBIq, dfIqOutLag[401:505,], type ="response")
mean(abs(predNBIq[12:105]-dfIqOutLag$total_cases[401:494]))
plotComp(dfIqOutLag$total_cases[401:494], predNBIq[12:105])
mNBIq <- glm.nb(total_cases ~
reanalysis_dew_point_temp_k + #9
reanalysis_specific_humidity_g_per_kg + #9
station_avg_temp_c +  #11
station_min_temp_c, #+  #11
total_cases_Lag,
data=dfIqOutLag[100:400,])
predNBIq <- predict(mNBIq, dfIqOutLag[401:505,], type ="response")
mean(abs(predNBIq[12:105]-dfIqOutLag$total_cases[401:494]))
dfIqOutLag <- cbind(dfIqOut[11:515,14], #precip
dfIqOut[4:508, c(11,17)], #dew humid
dfIqOut[1:505, c(19,24)], # avg
dfIqOut[5:509, c(22)], #min
dfIqOut[15:519,c(2,3,24)]) # year week total
names(dfIqOutLag)[1] <- "reanalysis_precip_amt_kg_per_m2"
names(dfIqOutLag)[4] <- "station_avg_temp_c"
names(dfIqOutLag)[5] <- "total_cases_Lag"
names(dfIqOutLag)[6] <- "station_min_temp_c"
mNBIq <- glm.nb(total_cases ~
reanalysis_dew_point_temp_k + #9
reanalysis_specific_humidity_g_per_kg + #9
station_avg_temp_c +  #11
station_min_temp_c, #+  #11
total_cases_Lag,
data=dfIqOutLag[100:400,])
predNBIq <- predict(mNBIq, dfIqOutLag[401:505,], type ="response")
mean(abs(predNBIq[12:105]-dfIqOutLag$total_cases[401:494]))
plotComp(dfIqOutLag$total_cases[401:494], predNBIq[12:105])
forwardIq <- dfIqOutLag[401:505,1:8]
forwardIq$total_cases_Lag[15:nrow(forwardIq)] <- 0
predForwIq <- NULL
for (i in 1:nrow(forwardIq)){
thisPred <- predict(mNBIq, forwardIq[i,], type ="response")
if (i < nrow(forwardIq)-14){
forwardIq$total_cases_Lag[14+i] <- thisPred
}
predForwIq <- c(predForwIq, thisPred)
}
mean(abs(predForwIq-dfIqOutLag$total_cases[401:505]))
plotComp(predForwIq, dfIqOut$total_cases[401:505])
mNBIq <- glm.nb(total_cases ~
reanalysis_dew_point_temp_k + #9
reanalysis_specific_humidity_g_per_kg + #9
station_avg_temp_c +  #11
station_min_temp_c, #+  #11
total_cases_Lag,
data=dfIqOutLag[100:450,])
predNBIq <- predict(mNBIq, dfIqOutLag[451:505,], type ="response")
mean(abs(predNBIq[12:105]-dfIqOutLag$total_cases[451:494]))
plotComp(dfIqOutLag$total_cases[451:494], predNBIq[12:555])
plotComp(dfIqOutLag$total_cases[451:494], predNBIq[12:55])
mean(abs(predNBIq[12:55]-dfIqOutLag$total_cases[451:494]))
plotComp(dfIqOutLag$total_cases[451:494], predNBIq[12:55])
mNBIq <- glm.nb(total_cases ~
reanalysis_dew_point_temp_k + #9
reanalysis_specific_humidity_g_per_kg + #9
station_avg_temp_c +  #11
station_min_temp_c, #+  #11
total_cases_Lag,
data=dfIqOutLag[200:450,])
predNBIq <- predict(mNBIq, dfIqOutLag[451:505,], type ="response")
mean(abs(predNBIq[12:55]-dfIqOutLag$total_cases[451:494]))
plotComp(dfIqOutLag$total_cases[451:494], predNBIq[12:55])
forwardIq <- dfIqOutLag[451:505,1:8]
forwardIq$total_cases_Lag[15:nrow(forwardIq)] <- 0
predForwIq <- NULL
for (i in 1:nrow(forwardIq)){
thisPred <- predict(mNBIq, forwardIq[i,], type ="response")
if (i < nrow(forwardIq)-14){
forwardIq$total_cases_Lag[14+i] <- thisPred
}
predForwIq <- c(predForwIq, thisPred)
}
mean(abs(predForwIq-dfIqOutLag$total_cases[451:505]))
plotComp(predForwIq, dfIqOut$total_cases[451:505])
mNBIq <- glm.nb(total_cases ~
reanalysis_dew_point_temp_k + #9
reanalysis_specific_humidity_g_per_kg + #9
station_avg_temp_c +  #11
station_min_temp_c, #+  #11
total_cases_Lag,
data=dfIqOutLag[100:519,])
dfTiqOutLag <- cbind(c(dfIqOut[516:519, 14], dfTiqOut[1:152,14]),
rbind(dfIqOut[511:519, c(11,17)], dfTiqOut[1:147, c(11,17)]),
rbind(dfIqOut[509:519, c(19,22)], dfTiqOut[1:145, c(19,22)]))
names(dfTiqOutLag)[1] <- "reanalysis_precip_amt_kg_per_m2"
forwardIq <- dfTiqOutLag
forwardIq$total_cases_Lag[15:nrow(forwardIq)] <- 0
forwardSj$total_cases_Lag[1:14] <- dfIqOut$total_cases[506:519]
forwardIq$total_cases_Lag[1:14] <- dfIqOut$total_cases[506:519]
predForwIq <- NULL
for (i in 1:nrow(forwardIq)){
thisPred <- predict(mNBIq, forwardIq[i,], type ="response")
if (i < nrow(forwardIq)-14){
forwardIq$total_cases_Lag[14+i] <- thisPred
}
predForwIq <- c(predForwIq, thisPred)
}
plot(predForwIq)
submit$total_cases <- c(rep(0,260), floor(predForwIq))
write.csv(submit, "./SubmissionForwardSjIq.csv", row.names = FALSE)
