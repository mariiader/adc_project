out1 <- c(0,1,1,0)
matr1 <- matrix(val1, nrow=4, ncol=3)
out1m <- matrix(out1, nrow=4, ncol=1)
val1 <- c(1,1,1,1, k, 1, l, k, k, l, 1, k)
matr1 <- matrix(val1, nrow=4, ncol=3)
out1m <- matrix(out1, nrow=4, ncol=1)
pi1 <- ginv(matr1)
pi1 %*% out1m
pi1
val2 <- c(1,1,1,1, k, 1, 1, k)
matr2 <- matrix(val2, nrow=4, ncol=2)
pi2 <- ginv(matr2) #MPPI
step <- pi2 %*% out1m
step
pi2
file1 <- data.frame()
file1$A <- rnorm(10,0,1)
file1 <- data.frame(matrix(vector(), 10, 10, dimnames=list(c(),c("A","B","C","D","E","F","G","H","I","J"))),
stringsAsFactors = F)
rnorm(10,0,1)
file1$A <- rnorm(10,0,1)
file1$A <- rnorm(10,0,1)
file1$B <- rnorm(10,1,1)
file1$C <- rnorm(10,2,1)
file1$D <- rnorm(10,3,1)
file1$E <- rnorm(10,4,1)
file1$F <- rnorm(10,5,1)
file1$G <- rnorm(10,6,1)
file1$H <- rnorm(10,7,1)
file1$I <- rnorm(10,8,1)
file1$J <- rnorm(10,9,1)
file2 <- data.frame(matrix(vector(), 10, 10, dimnames=list(c(),c("A","B","C","D","E","F","G","H","I","J"))),
stringsAsFactors = F)
file2$A <- rnorm(10,0,1)
file2$B <- rnorm(10,1,1)
file2$C <- rnorm(10,2,1)
file2$D <- rnorm(10,3,1)
file2$E <- rnorm(10,4,1)
file2$F <- rnorm(10,5,1)
file2$G <- rnorm(10,6,1)
file2$H <- rnorm(10,7,1)
file2$I <- rnorm(10,8,1)
file2$J <- rnorm(10,9,1)
write.csv(file1,
"C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/MA-Arbeit/GitRepo/umbrella/src/test/resources/data/example/file1.csv",
sep=",")
write.csv(file1,
"C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/MA-Arbeit/GitRepo/umbrella/src/test/resources/data/example/file1.csv",
row.names = F)
write.csv(file2,
"C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/MA-Arbeit/GitRepo/umbrella/src/test/resources/data/example/file2.csv",
row.names = F)
write.csv(file3,
"C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/MA-Arbeit/GitRepo/umbrella/src/test/resources/data/example/file3.csv",
row.names = F)
file3 <- data.frame(matrix(vector(), 10, 10, dimnames=list(c(),c("A1","B2","C3","D4","E5","F6","G7","H8","I9","J0"))),
stringsAsFactors = F)
file3$A1 <- rnorm(10,0,1)
file3$B2 <- rnorm(10,1,1)
file3$C3 <- rnorm(10,2,1)
file3$D4 <- rnorm(10,3,1)
file3$E5 <- rnorm(10,4,1)
file3$F6 <- rnorm(10,5,1)
file3$G7 <- rnorm(10,6,1)
file3$H8 <- rnorm(10,7,1)
file3$I9 <- rnorm(10,8,1)
file3$J0 <- rnorm(10,9,1)
write.csv(file3,
"C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/MA-Arbeit/GitRepo/umbrella/src/test/resources/data/example/file3.csv",
row.names = F)
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv")
plot(kernel)
plot(kernel ~ seq(-5,5,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(kernel ~ seq(-5,5,0.1))
length(seq(-5,5,0.1))
plot(kernel$V1 ~ seq(-5,5,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(kernel$V1 ~ seq(-5,5,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(kernel$V1 ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
exp(-744)
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
plot(kernel$V1 ~ seq(-7,7,0.1))
exp(12)
exp(-2.00e+12)
exp(-1.2e+13)
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(kernel$V1 ~ seq(-7,7,0.1))
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
exp(e)
exp(log(3))
log(10)
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
sum(exp(kernel$V1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1)/10 ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(kernel$V1 ~ seq(-7,7,0.1))
sum(exp(kernel$V1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
sum(exp(kernel$V1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(exp(kernel$V1) ~ seq(-7,7,0.1))
plot(kernel$V1 ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(kernel$V1 ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(kernel$V1 ~ seq(-7,7,0.1))
kernel <- read.csv("C:/Users/hendr/Desktop/Kernel.csv", header = F)
plot(kernel$V1 ~ seq(-7,7,0.1))
2 %% 1.5
2 %% 1.52
14 %% 1.52
rm(kernel)
u1 <- read.csv("C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/MA-Arbeit/GitRepo/umbrella/src/test/resources/data/ucdpged/ged19-release.csv", sep=",")
which(is.na(u1))
u1 <- read.csv("C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/MA-Arbeit/GitRepo/umbrella/src/test/resources/data/ucdpged/ged19-release.csv", sep=",", stringsAsFactors = F)
?write.csv
write.csv(u1, "C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/MA-Arbeit/GitRepo/umbrella/src/test/resources/data/ucdpged/UPged19-release.csv", sep=", ", row.names = FALSE)
load("~/Uni_Konstanz/Master/Semester_4/Challenge/gitRepo/adc_project/WorkspaceSoAbend.RData")
dfSjOutShort <- dfSjOut[500:700,]
summary(mDynLag <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 9) +
L(reanalysis_specific_humidity_g_per_kg, 9) +
L(station_avg_temp_c, 11) +
L(station_min_temp_c, 11) +
#year #+
L(reanalysis_precip_amt_kg_per_m2, 2) #+
, data=dfSjOutShort))
library(foreign)
library(dplyr)
library(MASS)
library(ggplot2)
library(zoo)
library(forecast)
library(corrgram)
library(dynlm)
library(astsa)
summary(mDynLag <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 9) +
L(reanalysis_specific_humidity_g_per_kg, 9) +
L(station_avg_temp_c, 11) +
L(station_min_temp_c, 11) +
#year #+
L(reanalysis_precip_amt_kg_per_m2, 2) #+
, data=dfSjOutShort))
dfSjOutLag <- cbind(dfSjOut[10:934,14], #precip
dfSjOut[3:927, c(11,17)], #dew humid
dfSjOut[1:925, c(19,22)],  # avg min
dfSjOut[12:936,c(2,3,24)]) # year week total
names(dfSjOutLag)[1] <- "reanalysis_precip_amt_kg_per_m2"
predDynSj <- predict(mDynLag, newdata = dfSjOut[701:936,], type = "response")
mean(abs(dfSjOut[701:936,24]-(predDyn)))
mean(abs(dfSjOut[701:936,24]-(predDynSj)))
plotComp(c(dfSjOut[701:936,24]),
predDynSj)
dfSjOutLag <- cbind(dfSjOut[10:934,14], #precip
#dfSjOut[10:934,14], #total lagged
dfSjOut[3:927, c(11,17)], #dew humid
dfSjOut[1:925, c(19,22,24)],  # avg min
dfSjOut[12:936,c(2,3,24)]) # year week total
names(dfSjOutLag)[1] <- "reanalysis_precip_amt_kg_per_m2"
names(dfSjOutLag)[6] <- "total_cases_Lag"
mNBSj <- glm.nb(total_cases ~
reanalysis_dew_point_temp_k + #9
reanalysis_specific_humidity_g_per_kg + #9
station_avg_temp_c +  #11
station_min_temp_c + #,  #11
total_cases_Lag,
data=dfSjOutLag[400:700,])
predNB <- predict(mNBSj, dfSjOutLag[701:925,], type ="response")
mean(abs(predNB[12:225]-dfSjOutLag$total_cases[701:914]))
plotComp(dfSjOutLag$total_cases[701:914], predNB[12:225])
forwardSj <- dfSjOutLag[701:925,1:8]
forwardSj$total_cases_Lag[12:nrow(forwardSj)] <- 0
predForw <- NULL
for (i in 1:nrow(forwardSj)){
thisPred <- predict(mNBSj, forwardSj[i,], type ="response")
if (i < nrow(forwardSj)-11){
forwardSj$total_cases_Lag[11+i] <- thisPred
}
predForw <- c(predForw, thisPred)
}
mean(abs(predForw-dfSjOutLag$total_cases[701:925]))
mNBSj <- glm.nb(total_cases ~
reanalysis_dew_point_temp_k + #9
reanalysis_specific_humidity_g_per_kg + #9
station_avg_temp_c +  #11
station_min_temp_c + #,  #11
total_cases_Lag,
data=dfSjOutLag[500:700,])
predNB <- predict(mNBSj, dfSjOutLag[701:925,], type ="response")
mean(abs(predNB[12:225]-dfSjOutLag$total_cases[701:914]))
forwardSj <- dfSjOutLag[701:925,1:8]
forwardSj$total_cases_Lag[12:nrow(forwardSj)] <- 0
predForw <- NULL
for (i in 1:nrow(forwardSj)){
thisPred <- predict(mNBSj, forwardSj[i,], type ="response")
if (i < nrow(forwardSj)-11){
forwardSj$total_cases_Lag[11+i] <- thisPred
}
predForw <- c(predForw, thisPred)
}
mean(abs(predForw-dfSjOutLag$total_cases[701:925]))
plotComp(predForw, dfSjOut$total_cases[701:925])
summary(mDynLagIq <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 11) +
L(reanalysis_specific_humidity_g_per_kg, 11) +
L(station_avg_temp_c, 14) +
L(station_min_temp_c, 10) +
#year #+
L(reanalysis_precip_amt_kg_per_m2, 2) #+
# L(total_cases, 1)
, data=dfIqOut)) # Short
predDynIq <- predict(mDynLagIq, newdata = dfIqOut, type = "response")
mean(abs(dfIqOut$total_cases-predDynIq))
dfIqOutShort <- dfSjOut[1:300,]
summary(mDynLagIq <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 11) +
L(reanalysis_specific_humidity_g_per_kg, 11) +
L(station_avg_temp_c, 14) +
L(station_min_temp_c, 10) +
#year #+
L(reanalysis_precip_amt_kg_per_m2, 2) #+
# L(total_cases, 1)
, data=dfIqOutShort)) # Short
predDynIq <- predict(mDynLagIq, newdata = dfIqOut[301:519], type = "response")
predDynIq <- predict(mDynLagIq, newdata = dfIqOut[301:519,], type = "response")
mean(abs(dfIqOut$total_cases-predDynIq))
mean(abs(dfIqOut[301:519,]$total_cases-predDynIq))
fitsj <- rpart(total_cases ~ reanalysis_precip_amt_kg_per_m2 + reanalysis_dew_point_temp_k +
reanalysis_specific_humidity_g_per_kg + station_avg_temp_c   +
station_min_temp_c,
method="poisson", data=dfSjOutLag[650:925,], control=rpart.control(minsplit=50, cp=0.001))
library(rpart)
library(randomForest)
plot(fitsj, uniform=T)
text(fitsj, use.n=TRUE, all=TRUE, cex=0.8)
plot(fitsj, uniform=T, margin=0.2)
text(fitsj, use.n=TRUE, all=TRUE, cex=0.8)
treepredSj <- predict(fitsj, newdata=dfSjOutLag[701:925,])
mean(abs(dfSjOutLag$total_cases[701:925] - treepredSj))
plotComp(c(dfSjOutLag$total_cases[701:925]),
treepredSj)
fitspike <- rpart(Spike ~ .,
method="poisson", data=dfSjOutLagSpike[,c(1:5,7:8,10)], control=rpart.control(minsplit=5, minbucket=1))
spikePred <- predict(fitspike, newdata=dfSjOutLagSpike[1:925,])*200
mean(abs(dfSjOutLag$total_cases[1:925] - rep(0,925)))
plotComp(c(dfSjOutLagSpike$total_cases[1:925]),
spikePred)
plot(fit, uniform=T, margin=0.2)
text(fit, use.n=TRUE, all=TRUE, cex=0.8)
plot(fitspike, uniform=T, margin=0.2)
text(fitspike, use.n=TRUE, all=TRUE, cex=0.8)
fitspike <- rpart(Spike ~ .,
method="case", data=dfSjOutLagSpike[,c(1:5,7:8,10)], control=rpart.control(minsplit=5, minbucket=1))
?rpart
fitspike <- rpart(Spike ~ .,
method="class", data=dfSjOutLagSpike[,c(1:5,7:8,10)], control=rpart.control(minsplit=5, minbucket=1))
spikePred <- predict(fitspike, newdata=dfSjOutLagSpike[1:925,])*200
plotComp(c(dfSjOutLagSpike$total_cases[1:925]),
spikePred)
spikePred <- predict(fitspike, newdata=dfSjOutLagSpike[1:925,])
mean(abs(dfSjOutLag$total_cases[1:925] - rep(0,925)))
plotComp(c(dfSjOutLagSpike$total_cases[1:925]),
spikePred)
plotComp(c(dfSjOutLagSpike$total_cases[1:925]),
spikePred[1])
plotComp(c(dfSjOutLagSpike$total_cases[1:925]),
spikePred[1]*100)
plot(fitspike, uniform=T, margin=0.2)
text(fitspike, use.n=TRUE, all=TRUE, cex=0.8)
fitspike <- rpart(Spike ~ .,
method="class", data=dfSjOutLagSpike[,c(1:5,7:8,10)])
spikePred <- predict(fitspike, newdata=dfSjOutLagSpike[1:925,])
plotComp(c(dfSjOutLagSpike$total_cases[1:925]),
spikePred[1]*100)
summary(spikePred)
spikePred
plotComp(c(dfSjOutLagSpike$total_cases[1:925]),
spikePred[2]*100)
spikePred[2]*100
plotComp(c(dfSjOutLagSpike$total_cases[1:925]),
spikePred[,2]*100)
plotComp(SjApprox$real,
predict(fitspike, newdata=dfTsjOutLag)*50)
plotComp(SjApprox$real,
predict(fitspike, newdata=dfTsjOutLag)[,2]*50)
plot(fitspike, uniform=T, margin=0.2)
text(fitspike, use.n=TRUE, all=TRUE, cex=0.8)
mean(abs(predForw-dfSjOutLag$total_cases[701:925]))
plotComp(predForw, dfSjOut$total_cases[701:925])
############### Data Challenge ###################
##### Preprocessing #####
library(foreign)
library(dplyr)
library(MASS)
library(ggplot2)
library(zoo)
library(forecast)
library(corrgram)
library(dynlm)
library(astsa)
#Import as Time Series
setwd("C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/Challenge/gitRepo/adc_project")
feats <- read.csv(
"./data/dengue_features_train.csv",
sep=",", stringsAsFactors = F)
labels <- read.csv(
"./data/dengue_labels_train.csv",
sep=",", stringsAsFactors = F)
test <- read.csv(
"./data/dengue_features_test.csv",
sep=",", stringsAsFactors = F)
submit <- read.csv(
"./data/submission_format.csv",
sep=",", stringsAsFactors = F)
#Concat
train <- merge(feats, labels, by=c("city","year","weekofyear"), all=TRUE)
rm(feats, labels)
#San Juan
trainSj <- filter(train, city=="sj")
trainSj <- trainSj[with(trainSj, order(year,weekofyear)),]
trainSj$ID <- seq(1, nrow(trainSj), 1)
rownames(trainSj) <- seq(length=nrow(trainSj))
#Iquitos
trainIq <- filter(train, city=="iq")
trainIq <- trainIq[with(trainIq, order(year,weekofyear)),]
trainIq <- trainIq[1:519,]
trainIq$ID <- seq(1, nrow(trainIq), 1)
rownames(trainIq) <- seq(length=nrow(trainIq))
#Test
testSj <- filter(test, city=="sj")
testIq <- filter(test, city=="iq")
testSj <- testSj[with(testSj, order(year,weekofyear)),]
testIq <- testIq[with(testIq, order(year,weekofyear)),]
testSj$ID <- seq(1, nrow(testSj), 1)
testIq$ID <- seq(1, nrow(testIq), 1)
### Zoo ###
zooSj <- read.zoo(trainSj[,1:25],  index.column = 4, format="%Y-%m-%d")
zooIq <- read.zoo(trainIq[,1:25],  index.column = 4, format="%Y-%m-%d")
zooTsj <- read.zoo(testSj[,1:24],  index.column = 4, format="%Y-%m-%d")
zooTiq <- read.zoo(testIq[,1:24],  index.column = 4, format="%Y-%m-%d")
### Missing Values ###
# Probably different imputations for different values #
#sapply(zooSj,function(x){sum(is.na(x))})
zooSjOut <- na.approx(zooSj[,4:23])
zooSjOut <- merge.zoo(zooSj[,1:3], zooSjOut, zooSj[,24])
names(zooSjOut)[24] <- "total_cases"
dfSjOut <- as.data.frame(zooSjOut)
indx <- sapply(dfSjOut, is.factor)
dfSjOut[indx] <- lapply(dfSjOut[indx], function(x) as.numeric(as.character(x)))
dfSjOut$city <- "sj"
#sapply(zooIq,function(x){sum(is.na(x))})
zooIqOut <- na.approx(zooIq[,4:23])
zooIqOut <- merge.zoo(zooIq[,1:3], zooIqOut, zooIq[,24])
names(zooIqOut)[24] <- "total_cases"
dfIqOut <- as.data.frame(zooIqOut)
indx <- sapply(dfIqOut, is.factor)
dfIqOut[indx] <- lapply(dfIqOut[indx], function(x) as.numeric(as.character(x)))
dfIqOut$city <- "iq"
# Zoo for Test
zooTsjOut <- na.approx(zooTsj[,4:23])
zooTiqOut <- na.approx(zooTiq[,4:23])
zooTsjOut <- merge.zoo(zooTsj[,1:3], zooTsjOut)
zooTiqOut <- merge.zoo(zooTiq[,1:3], zooTiqOut)
dfTsjOut <- as.data.frame(zooTsjOut)
dfTiqOut <- as.data.frame(zooTiqOut)
indx <- sapply(dfTsjOut, is.factor)
dfTsjOut[indx] <- lapply(dfTsjOut[indx], function(x) as.numeric(as.character(x)))
dfTsjOut$city <- "sj"
dfTiqOut[indx] <- lapply(dfTiqOut[indx], function(x) as.numeric(as.character(x)))
dfTiqOut$city <- "iq"
rm(indx, zooIq, zooIqOut, zooSj, zooSjOut, zooTiq, zooTiqOut, zooTsj, zooTsjOut)
dfSjOut[701,1:5]
dfSjOut[936,1:5]
load("~/Uni_Konstanz/Master/Semester_4/Challenge/gitRepo/adc_project/WorkspaceSoAbend.RData")
dfSjOutLag <- cbind(dfSjOut[10:934,14], #precip
#dfSjOut[10:934,14], #total lagged
dfSjOut[3:927, c(11,17)], #dew humid
dfSjOut[1:925, c(19,22,24)],  # avg min
dfSjOut[12:936,c(2,3,24)]) # year week total
names(dfSjOutLag)[1] <- "reanalysis_precip_amt_kg_per_m2"
names(dfSjOutLag)[6] <- "total_cases_Lag"
mNBSj <- glm.nb(total_cases ~
reanalysis_dew_point_temp_k + #9
reanalysis_specific_humidity_g_per_kg + #9
station_avg_temp_c +  #11
station_min_temp_c + #,  #11
total_cases_Lag,
data=dfSjOutLag[500:700,])
predNB <- predict(mNBSj, dfSjOutLag[701:925,], type ="response")
forwardSj <- dfSjOutLag[701:925,1:8]
forwardSj$total_cases_Lag[12:nrow(forwardSj)] <- 0
predForw <- NULL
for (i in 1:nrow(forwardSj)){
thisPred <- predict(mNBSj, forwardSj[i,], type ="response")
if (i < nrow(forwardSj)-11){
forwardSj$total_cases_Lag[11+i] <- thisPred
}
predForw <- c(predForw, thisPred)
}
mean(abs(predForw-dfSjOutLag$total_cases[701:925]))
plotComp(predForw, dfSjOut$total_cases[701:925])
plotComp <- function(true, pred){
ticks <- which(dfSjOut[701:936]$weekofyear==1)
ticklabels <- unique(dfSjOut[701:936]$year)
thisPlot <- ggplot(data = as.data.frame(cbind(true,pred)), aes(x=seq(1,length(pred),1))) +
scale_x_continuous(name="Year", expand = c(0, 0),
breaks=ticks, labels=ticklabels[-1]) +
scale_y_continuous(name=variable, name="Total Cases",  expand = c(0, 0)) +
geom_line(aes(y=true), color='blue') + geom_line(aes(y=pred), color='red') #+
thisPlot
}
plotComp(predForw, dfSjOut$total_cases[701:925])
plotComp <- function(true, pred){
ticks <- which(dfSjOut$weekofyear[701:936]==1)
ticklabels <- unique(dfSjOut$year[701:936])
thisPlot <- ggplot(data = as.data.frame(cbind(true,pred)), aes(x=seq(1,length(pred),1))) +
scale_x_continuous(name="Year", expand = c(0, 0),
breaks=ticks, labels=ticklabels[-1]) +
scale_y_continuous(name=variable, name="Total Cases",  expand = c(0, 0)) +
geom_line(aes(y=true), color='blue') + geom_line(aes(y=pred), color='red') #+
thisPlot
}
plotComp(predForw, dfSjOut$total_cases[701:925])
plotComp <- function(true, pred){
ticks <- which(dfSjOut$weekofyear[701:936]==1)
ticklabels <- unique(dfSjOut$year[701:936])
thisPlot <- ggplot(data = as.data.frame(cbind(true,pred)), aes(x=seq(1,length(pred),1))) +
scale_x_continuous(name="Year", expand = c(0, 0),
breaks=ticks, labels=ticklabels[-1]) +
scale_y_continuous(name="Total Cases",  expand = c(0, 0)) +
geom_line(aes(y=true), color='blue') + geom_line(aes(y=pred), color='red') #+
thisPlot
}
plotComp(predForw, dfSjOut$total_cases[701:925])
plotComp <- function(true, pred){
ticks <- which(dfSjOut$weekofyear[701:936]==1)
ticklabels <- unique(dfSjOut$year[701:936])
thisPlot <- ggplot(data = as.data.frame(cbind(true,pred)), aes(x=seq(1,length(pred),1))) +
scale_x_continuous(name="Year", expand = c(0, 0),
breaks=ticks, labels=ticklabels[-1]) +
scale_y_continuous(name="Total Cases",  expand = c(0, 0)) +
geom_line(aes(y=true), color='blue',size=1.2) + geom_line(aes(y=pred), color='red') #+
thisPlot
}
plotComp(predForw, dfSjOut$total_cases[701:925])
plotComp <- function(true, pred){
ticks <- which(dfSjOut$weekofyear[701:936]==1)
ticklabels <- unique(dfSjOut$year[701:936])
thisPlot <- ggplot(data = as.data.frame(cbind(true,pred)), aes(x=seq(1,length(pred),1))) +
scale_x_continuous(name="Year", expand = c(0, 0),
breaks=ticks, labels=ticklabels[-1]) +
scale_y_continuous(name="Total Cases",  expand = c(0, 0)) +
geom_line(aes(y=true), color='blue',size=1.2) + geom_line(aes(y=pred), color='red', size=1.2) #+
thisPlot
}
plotComp(predForw, dfSjOut$total_cases[701:925])
dfIqOut[519,1:4]
dfIqOut[519,24]
dfIqOut[500:519,24]
plotSimp <- function(trainSet,variable){
ticks <- which(trainSet$weekofyear==1)
ticklabels <- unique(trainSet$year)
variableV <- trainSet[variable]
thisPlot <- ggplot(data=trainSet, aes(x=ID)) +
theme(panel.background = element_rect(fill = "white"),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid",
colour = "black")) +
scale_x_continuous(name="Year", expand = c(0, 0),
breaks=ticks, labels=ticklabels[-1]) +
scale_y_continuous(name=variable,  expand = c(0, 0)) +
geom_line(aes(y=variableV), color='red')
thisPlot
}
plotSimp(dfIqOut,"total_cases")
plotSimp <- function(trainSet,variable){
ticks <- which(trainSet$weekofyear==1)
ticklabels <- unique(trainSet$year)
variableV <- trainSet[variable]
thisPlot <- ggplot(data=trainSet, aes(x=seq(1,length(variableV),1))) +
theme(panel.background = element_rect(fill = "white"),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid",
colour = "black")) +
scale_x_continuous(name="Year", expand = c(0, 0),
breaks=ticks, labels=ticklabels[-1]) +
scale_y_continuous(name=variable,  expand = c(0, 0)) +
geom_line(aes(y=variableV), color='red')
thisPlot
}
plotSimp(dfIqOut,"total_cases")
plot(dfIqOut$total_cases)
summary(dfSjOut$reanalysis_precip_amt_kg_per_m2)
