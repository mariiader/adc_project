calc <- function(x,y,rate){
eins <- x
zwei <- y
i <- 0
while (i<20) {
print(f0(eins,zwei))
vec1 <- f1(eins, zwei)*rate
vec2 <- f2(eins, zwei)*rate
if (vec1>0){
eins <- eins - vec1
} else {
eins <- eins + abs(vec1)
}
if (vec2>0){
zwei <- zwei - vec2
} else {
zwei <- zwei + abs(vec2)
}
print(c(eins, zwei))
i <- i+1
}
}
calc(0,0,0.2)
f1 <- function(x,y){
a <- 4*x - 2
return(a)
}
f2 <- function(x,y){
b <- 2*y - 1
return(b)
}
calc(0,0,0.2)
calc <- function(x,y,rate){
eins <- x
zwei <- y
i <- 0
while (i<20) {
vec1 <- f1(eins, zwei)*rate
vec2 <- f2(eins, zwei)*rate
if (vec1>0){
eins <- eins - vec1
} else {
eins <- eins + abs(vec1)
}
if (vec2>0){
zwei <- zwei - vec2
} else {
zwei <- zwei + abs(vec2)
}
print(c(i, f0(eins, zwei), eins, zwei))
i <- i+1
}
}
calc(0,0,0.2)
calc <- function(x,y,rate){
eins <- x
zwei <- y
i <- 0
while (i<20) {
vec1 <- f1(eins, zwei)*rate
vec2 <- f2(eins, zwei)*rate
if (vec1>0){
eins <- eins - vec1
} else {
eins <- eins + abs(vec1)
}
if (vec2>0){
zwei <- zwei - vec2
} else {
zwei <- zwei + abs(vec2)
}
print(c(i, f0(eins, zwei), eins, zwei, vec1, vec2))
i <- i+1
}
}
calc(0,0,0.2)
############### Data Challenge ###################
##### Preprocessing #####
library(foreign)
library(dplyr)
library(MASS)
library(ggplot2)
library(zoo)
library(forecast)
library(corrgram)
library(dynlm)
#Import as Time Series
setwd("C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/Challenge/gitRepo/adc_project")
feats <- read.csv(
"./data/dengue_features_train.csv",
sep=",", stringsAsFactors = F)
labels <- read.csv(
"./data/dengue_labels_train.csv",
sep=",", stringsAsFactors = F)
test <- read.csv(
"./data/dengue_features_test.csv",
sep=",", stringsAsFactors = F)
submit <- read.csv(
"./data/submission_format.csv",
sep=",", stringsAsFactors = F)
#Concat
train <- merge(feats, labels, by=c("city","year","weekofyear"), all=TRUE)
rm(feats, labels)
#San Juan
trainSj <- filter(train, city=="sj")
trainSj <- trainSj[with(trainSj, order(year,weekofyear)),]
trainSj$ID <- seq(1, nrow(trainSj), 1)
rownames(trainSj) <- seq(length=nrow(trainSj))
#Iquitos
trainIq <- filter(train, city=="iq")
trainIq <- trainIq[with(trainIq, order(year,weekofyear)),]
trainIq <- trainIq[1:519,]
trainIq$ID <- seq(1, nrow(trainIq), 1)
rownames(trainIq) <- seq(length=nrow(trainIq))
#Test
testSj <- filter(test, city=="sj")
testIq <- filter(test, city=="iq")
testSj <- testSj[with(testSj, order(year,weekofyear)),]
testIq <- testIq[with(testIq, order(year,weekofyear)),]
testSj$ID <- seq(1, nrow(testSj), 1)
testIq$ID <- seq(1, nrow(testIq), 1)
### Zoo ###
zooSj <- read.zoo(trainSj[,1:25],  index.column = 4, format="%Y-%m-%d")
zooIq <- read.zoo(trainIq[,1:25],  index.column = 4, format="%Y-%m-%d")
zooTsj <- read.zoo(testSj[,1:24],  index.column = 4, format="%Y-%m-%d")
zooTiq <- read.zoo(testIq[,1:24],  index.column = 4, format="%Y-%m-%d")
### Missing Values ###
# Probably different imputations for different values #
#sapply(zooSj,function(x){sum(is.na(x))})
zooSjOut <- na.approx(zooSj[,4:23])
zooSjOut <- merge.zoo(zooSj[,1:3], zooSjOut, zooSj[,24])
names(zooSjOut)[24] <- "total_cases"
dfSjOut <- as.data.frame(zooSjOut)
indx <- sapply(dfSjOut, is.factor)
dfSjOut[indx] <- lapply(dfSjOut[indx], function(x) as.numeric(as.character(x)))
dfSjOut$city <- "sj"
#sapply(zooIq,function(x){sum(is.na(x))})
zooIqOut <- na.approx(zooIq[,4:23])
zooIqOut <- merge.zoo(zooIq[,1:3], zooIqOut, zooIq[,24])
names(zooIqOut)[24] <- "total_cases"
dfIqOut <- as.data.frame(zooIqOut)
indx <- sapply(dfIqOut, is.factor)
dfIqOut[indx] <- lapply(dfIqOut[indx], function(x) as.numeric(as.character(x)))
dfIqOut$city <- "iq"
# Zoo for Test
zooTsjOut <- na.approx(zooTsj[,4:23])
zooTiqOut <- na.approx(zooTiq[,4:23])
zooTsjOut <- merge.zoo(zooTsj[,1:3], zooTsjOut)
zooTiqOut <- merge.zoo(zooTiq[,1:3], zooTiqOut)
dfTsjOut <- as.data.frame(zooTsjOut)
dfTiqOut <- as.data.frame(zooTiqOut)
indx <- sapply(dfTsjOut, is.factor)
dfTsjOut[indx] <- lapply(dfTsjOut[indx], function(x) as.numeric(as.character(x)))
dfTsjOut$city <- "sj"
dfTiqOut[indx] <- lapply(dfTiqOut[indx], function(x) as.numeric(as.character(x)))
dfTiqOut$city <- "iq"
rm(indx, zooIq, zooIqOut, zooSj, zooSjOut, zooTiq, zooTiqOut, zooTsj, zooTsjOut)
summary(mDynLag <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 9) +
L(reanalysis_specific_humidity_g_per_kg, 9) +
L(station_avg_temp_c, 11) +
L(station_min_temp_c, 11) +
L(total_cases, 1), data=dfSjOut))
summary(mDynLag <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 9) +
L(reanalysis_specific_humidity_g_per_kg, 9) +
L(station_avg_temp_c, 11) +
L(station_min_temp_c, 11) #+
#L(total_cases, 1)
, data=dfSjOut))
plotComp <- function(true, pred){
thisPlot <- ggplot(data = as.data.frame(cbind(true,pred)), aes(x=seq(1,length(pred),1))) +
scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0)) +
geom_line(aes(y=true), color='blue') + geom_line(aes(y=pred), color='red') #+
thisPlot
}
predDyn <- predict(mDynLag, newdata = dfSjOutLag, type = "response")
dfSjOutLag <- cbind(dfSjOut[3:927, c(11,17)], dfSjOut[1:925, c(19,22)], dfSjOut[11:935,24])
names(dfSjOutLag)[5] <- "total_cases"
predDyn <- predict(mDynLag, newdata = dfSjOutLag, type = "response")
plotComp(c(dfSjOut[1:936,24],0),
c(rep(0,10), predNBSjLag))
plotComp(c(dfSjOut[1:936,24],0),
c(rep(0,10), predDyn))
summary(mDynLag <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 9) +
L(reanalysis_specific_humidity_g_per_kg, 9) +
L(station_avg_temp_c, 11) +
L(station_min_temp_c, 11) +
L(total_cases, 1)
, data=dfSjOut))
predNBSjLag <- predict(mNBL, newdata = dfSjOutLag, type = "response")
predDyn <- predict(mDynLag, newdata = dfSjOutLag, type = "response")
plotComp(c(dfSjOut[1:936,24],0),
c(rep(0,10), predDyn))
plotComp(c(dfSjOut[1:936,24],0),
c(rep(0,10), predDyn+5))
Summary(dynlm())
Summary(mDynLag)
summary(mDynLag)
dfTsjOutLag <- cbind(rbind(dfSjOut[928:936, c(11,17)], dfTsjOut[1:251, c(11,17)]),
rbind(dfSjOut[926:936, c(19,22)], dfSjOut[1:249, c(19,22)]))
dfTiqOutLag <- cbind(rbind(dfIqOut[511:519, c(11,17)], dfTiqOut[1:147, c(11,17)]),
rbind(dfIqOut[509:519, c(19,22)], dfTiqOut[1:145, c(19,22)]))
dfSjOutLag <- cbind(dfSjOut[3:927, c(11,17)], dfSjOut[1:925, c(19,22)])
dfIqOutLag <- cbind(dfIqOut[3:510, c(11,17)], dfIqOut[1:508, c(19,22)])
ArimaSjExLag <- auto.arima(tsSj[12:936],
stepwise=FALSE,
approximation = FALSE,
seasonal  = TRUE,
xreg = dfSjOutLag)
ArimaIqExLag <- auto.arima(tsIq[12:519],
stepwise=FALSE,
approximation = FALSE,
seasonal  = TRUE,
xreg = dfIqOutLag)
tsSj_df <- data.frame('Cases' = trainSj$total_cases,
'Time' = as.Date(trainSj$week_start_date[1:936]))
tsIq_df <- data.frame('Cases' = trainIq$total_cases,
'Time' = as.Date(trainIq$week_start_date[1:519]))
tsSj <- ts(tsSj_df, start=c(1990,18), frequency = 52)
tsIq <- ts(tsIq_df, start=c(2000,26), frequency = 52)
dfSjOutLag <- cbind(dfSjOut[3:927, c(11,17)], dfSjOut[1:925, c(19,22)])
dfIqOutLag <- cbind(dfIqOut[3:510, c(11,17)], dfIqOut[1:508, c(19,22)])
ArimaSjExLag <- auto.arima(tsSj[12:936],
stepwise=FALSE,
approximation = FALSE,
seasonal  = TRUE,
xreg = dfSjOutLag)
ArimaIqExLag <- auto.arima(tsIq[12:519],
stepwise=FALSE,
approximation = FALSE,
seasonal  = TRUE,
xreg = dfIqOutLag)
dfTsjOutLag <- cbind(rbind(dfSjOut[928:936, c(11,17)], dfTsjOut[1:251, c(11,17)]),
rbind(dfSjOut[926:936, c(19,22)], dfTsjOut[1:249, c(19,22)]))
dfTiqOutLag <- cbind(rbind(dfIqOut[511:519, c(11,17)], dfTiqOut[1:147, c(11,17)]),
rbind(dfIqOut[509:519, c(19,22)], dfTiqOut[1:145, c(19,22)]))
subSjForecastLag <- forecast(ArimaSjExLag, xreg = dfTsjOutLag[1:260,])
subIqForecastLag <- forecast(ArimaIqExLag, xreg = dfTiqOutLag[1:156,])
subSj <- floor(subSjForecastLag[[4]])
subIq <- floor(subIqForecastLag[[4]])
plut(subSj)
plot(subSj)
plot(subIq)
predict(mDynLag, dfTsjOutLag, type="response")
library(foreign)
library(dplyr)
library(MASS)
library(ggplot2)
library(zoo)
library(forecast)
library(corrgram)
library(dynlm)
?predict
setwd("C:/Users/hendr/Documents/Uni_Konstanz/Master/Semester_4/Challenge/gitRepo/adc_project")
feats <- read.csv(
"./data/dengue_features_train.csv",
sep=",", stringsAsFactors = F)
labels <- read.csv(
"./data/dengue_labels_train.csv",
sep=",", stringsAsFactors = F)
test <- read.csv(
"./data/dengue_features_test.csv",
sep=",", stringsAsFactors = F)
submit <- read.csv(
"./data/submission_format.csv",
sep=",", stringsAsFactors = F)
#Concat
train <- merge(feats, labels, by=c("city","year","weekofyear"), all=TRUE)
rm(feats, labels)
#San Juan
trainSj <- filter(train, city=="sj")
trainSj <- trainSj[with(trainSj, order(year,weekofyear)),]
trainSj$ID <- seq(1, nrow(trainSj), 1)
rownames(trainSj) <- seq(length=nrow(trainSj))
#Iquitos
trainIq <- filter(train, city=="iq")
trainIq <- trainIq[with(trainIq, order(year,weekofyear)),]
trainIq <- trainIq[1:519,]
trainIq$ID <- seq(1, nrow(trainIq), 1)
rownames(trainIq) <- seq(length=nrow(trainIq))
#Test
testSj <- filter(test, city=="sj")
testIq <- filter(test, city=="iq")
testSj <- testSj[with(testSj, order(year,weekofyear)),]
testIq <- testIq[with(testIq, order(year,weekofyear)),]
testSj$ID <- seq(1, nrow(testSj), 1)
testIq$ID <- seq(1, nrow(testIq), 1)
### Zoo ###
zooSj <- read.zoo(trainSj[,1:25],  index.column = 4, format="%Y-%m-%d")
zooIq <- read.zoo(trainIq[,1:25],  index.column = 4, format="%Y-%m-%d")
zooTsj <- read.zoo(testSj[,1:24],  index.column = 4, format="%Y-%m-%d")
zooTiq <- read.zoo(testIq[,1:24],  index.column = 4, format="%Y-%m-%d")
### Missing Values ###
# Probably different imputations for different values #
#sapply(zooSj,function(x){sum(is.na(x))})
zooSjOut <- na.approx(zooSj[,4:23])
zooSjOut <- merge.zoo(zooSj[,1:3], zooSjOut, zooSj[,24])
names(zooSjOut)[24] <- "total_cases"
dfSjOut <- as.data.frame(zooSjOut)
indx <- sapply(dfSjOut, is.factor)
dfSjOut[indx] <- lapply(dfSjOut[indx], function(x) as.numeric(as.character(x)))
dfSjOut$city <- "sj"
#sapply(zooIq,function(x){sum(is.na(x))})
zooIqOut <- na.approx(zooIq[,4:23])
zooIqOut <- merge.zoo(zooIq[,1:3], zooIqOut, zooIq[,24])
names(zooIqOut)[24] <- "total_cases"
dfIqOut <- as.data.frame(zooIqOut)
indx <- sapply(dfIqOut, is.factor)
dfIqOut[indx] <- lapply(dfIqOut[indx], function(x) as.numeric(as.character(x)))
dfIqOut$city <- "iq"
# Zoo for Test
zooTsjOut <- na.approx(zooTsj[,4:23])
zooTiqOut <- na.approx(zooTiq[,4:23])
zooTsjOut <- merge.zoo(zooTsj[,1:3], zooTsjOut)
zooTiqOut <- merge.zoo(zooTiq[,1:3], zooTiqOut)
dfTsjOut <- as.data.frame(zooTsjOut)
dfTiqOut <- as.data.frame(zooTiqOut)
indx <- sapply(dfTsjOut, is.factor)
dfTsjOut[indx] <- lapply(dfTsjOut[indx], function(x) as.numeric(as.character(x)))
dfTsjOut$city <- "sj"
dfTiqOut[indx] <- lapply(dfTiqOut[indx], function(x) as.numeric(as.character(x)))
dfTiqOut$city <- "iq"
rm(indx, zooIq, zooIqOut, zooSj, zooSjOut, zooTiq, zooTiqOut, zooTsj, zooTsjOut)
summary(mDynLag <- dynlm(total_cases ~ seasonal(L(reanalysis_dew_point_temp_k, 9)) +
L(reanalysis_specific_humidity_g_per_kg, 9) +
L(station_avg_temp_c, 11) +
L(station_min_temp_c, 11) +
#L(total_cases, 1)
, data=dfSjOut))
summary(mDynLag <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 9) +
L(reanalysis_specific_humidity_g_per_kg, 9) +
L(station_avg_temp_c, 11) +
L(station_min_temp_c, 11) +
L(total_cases, 1)
, data=dfSjOut))
summary(mDynLag <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 9) +
L(reanalysis_specific_humidity_g_per_kg, 9) +
L(station_avg_temp_c, 11) +
L(station_min_temp_c, 11) #+
#L(total_cases, 1)
, data=dfSjOut))
predDyn <- predict(mDynLag, newdata = dfSjOutLag, type = "response")
plotComp(c(dfSjOut[1:936,24],0),
c(rep(0,10), predDyn))
plotComp <- function(true, pred){
thisPlot <- ggplot(data = as.data.frame(cbind(true,pred)), aes(x=seq(1,length(pred),1))) +
scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0)) +
geom_line(aes(y=true), color='blue') + geom_line(aes(y=pred), color='red') #+
thisPlot
}
predDyn <- predict(mDynLag, newdata = dfSjOutLag, type = "response")
plotComp(c(dfSjOut[1:936,24],0),
c(rep(0,10), predDyn))
dfSjOutLag <- cbind(dfSjOut[3:927, c(11,17)], dfSjOut[1:925, c(19,22)], dfSjOut[11:935,24])
names(dfSjOutLag)[5] <- "total_cases"
predNBSjLag <- predict(mNBL, newdata = dfSjOutLag, type = "response")
predDyn <- predict(mDynLag, newdata = dfSjOutLag, type = "response")
plotComp(c(dfSjOut[1:936,24],0),
c(rep(0,10), predDyn))
summary(mDynLag <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 9) +
L(reanalysis_specific_humidity_g_per_kg, 9) +
L(station_avg_temp_c, 11) +
L(station_min_temp_c, 11) +
L(reanalysis_precip_amt_kg_per_m2, 2) #+
#L(total_cases, 1)
, data=dfSjOut))
predDyn <- predict(mDynLag, newdata = dfSjOutLag, type = "response")
plotComp(c(dfSjOut[1:936,24],0),
c(rep(0,10), predDyn))
summary(mDynLag <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 9) +
L(reanalysis_specific_humidity_g_per_kg, 9) +
L(station_avg_temp_c, 11) +
L(station_min_temp_c, 11) +
L(reanalysis_precip_amt_kg_per_m2, 2) #+
#L(total_cases, 1)
, data=dfSjOut[1:700]))
summary(mDynLag <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 9) +
L(reanalysis_specific_humidity_g_per_kg, 9) +
L(station_avg_temp_c, 11) +
L(station_min_temp_c, 11) +
L(reanalysis_precip_amt_kg_per_m2, 2) #+
#L(total_cases, 1)
, data=dfSjOut[1:700,]))
predNBSjLag <- predict(mNBL, newdata = dfSjOutLag[701:925], type = "response")
predDyn <- predict(mDynLag, newdata = dfSjOutLag[701:925,], type = "response")
names(dfSjOut)[24]
names(dfSjOut)[20]
names(dfSjOut)[16]
names(dfSjOut)[10]
names(dfSjOut)[104]
names(dfSjOut)[14]
934-925
dfSjOutLag <- cbind(dfSjOut[9:934,14],
dfSjOut[3:927, c(11,17)], dfSjOut[1:925, c(19,22)], dfSjOut[11:935,24],
dfSjOut[11:934,24])
dfSjOutLag <- cbind(dfSjOut[10:934,14],
dfSjOut[3:927, c(11,17)],
dfSjOut[1:925, c(19,22)],
dfSjOut[11:935,24])
names(dfSjOutLag)[6] <- "total_cases"
names(dfSjOutLag)
summary(mDynLag <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 9) +
L(reanalysis_specific_humidity_g_per_kg, 9) +
L(station_avg_temp_c, 11) +
L(station_min_temp_c, 11) +
L(reanalysis_precip_amt_kg_per_m2, 2) #+
#L(total_cases, 1)
, data=dfSjOut[1:700,]))
predDyn <- predict(mDynLag, newdata = dfSjOutLag[712:925,], type = "response")
names(dfSjOutLag)
names(dfSjOutLag)[1] <- "reanalysis_precip_amt_kg_per_m2"
predDyn <- predict(mDynLag, newdata = dfSjOutLag[712:925,], type = "response")
length(predDyn)
936-214
plotComp(c(dfSjOut[1722:936,24],0),
c(rep(0,10), predDyn))
plotComp(c(dfSjOut[722:936,24],0),
c(rep(0,10), predDyn))
plotComp(c(dfSjOut[722:936,24],0),
predDyn)
plotComp(c(dfSjOut[721:936,24],0),
predDyn-20)
plotComp(c(dfSjOut[723:936,24],0),
predDyn-20)
length(dfSjOut[723:936,24])
View(cbind(dfSjOut[723:936,24], predDyn))
summary(mDynLag <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 9) +
L(reanalysis_specific_humidity_g_per_kg, 9) +
L(station_avg_temp_c, 11) +
L(station_min_temp_c, 11) #+
#L(reanalysis_precip_amt_kg_per_m2, 2) #+
#L(total_cases, 1)
, data=dfSjOut[1:700,]))
predDyn <- predict(mDynLag, newdata = dfSjOutLag[712:925,], type = "response")
plotComp(c(dfSjOut[723:936,24],0),
predDyn)
plotComp(c(dfSjOut[723:936,24],0),
predDyn-20)
plotComp(c(dfSjOut[723:936,24]),
predDyn-20)
mean(dfSjOut[723:936,24]-(predDyn-20))
View(dfSjOut[723:936,24]-(predDyn-20))
mean(asb(dfSjOut[723:936,24]-(predDyn-20)))
mean(abs(dfSjOut[723:936,24]-(predDyn-20)))
mean(abs(dfSjOut[723:936,24]-predDyn))
summary(mDynLag <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 9) +
L(reanalysis_specific_humidity_g_per_kg, 9) +
L(station_avg_temp_c, 11) +
L(station_min_temp_c, 11) #+
#L(reanalysis_precip_amt_kg_per_m2, 2) #+
#L(total_cases, 1)
, data=dfSjOut[400:700,]))
predDyn <- predict(mDynLag, newdata = dfSjOutLag[712:925,], type = "response")
plotComp(c(dfSjOut[723:936,24]),
predDyn-20)
mean(abs(dfSjOut[723:936,24]-(predDyn-20)))
mean(abs(dfSjOut[723:936,24]-(predDyn)))
?dynlm
summary(mDynLag <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 9) +
L(reanalysis_specific_humidity_g_per_kg, 9) +
L(station_avg_temp_c, 11) +
L(station_min_temp_c, 11) #+
#L(reanalysis_precip_amt_kg_per_m2, 2) #+
#L(total_cases, 1)
, data=dfSjOut[1:700,]))
summary(mDynLag <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 9) +
L(reanalysis_specific_humidity_g_per_kg, 9) +
L(station_avg_temp_c, 11) +
L(station_min_temp_c, 11) #+
#L(reanalysis_precip_amt_kg_per_m2, 2) #+
#L(total_cases, 1)
, data=dfSjOut[1:750,]))
predDyn <- predict(mDynLag, newdata = dfSjOutLag[762:925,], type = "response")
plotComp(c(dfSjOut[723:936,24]),
predDyn-20)
plotComp(c(dfSjOut[773:936,24]),
predDyn-20)
mean(abs(dfSjOut[773:936,24]-(predDyn-20)))
mean(abs(dfSjOut[773:936,24]-(predDyn)))
mean(abs(dfSjOut[773:936,24]-(predDyn)))
mean(abs(dfSjOut[773:936,24]-(predDyn-21)))
for (i in 1:30){
print(i, mean(abs(dfSjOut[773:936,24]-(predDyn-i))))
}
for (i in 1:30){
print(c(i, mean(abs(dfSjOut[773:936,24]-(predDyn-i)))))
}
dfSjOutLag <- cbind(dfSjOut[10:934,14],
dfSjOut[3:927, c(11,17)],
dfSjOut[1:925, c(19,22)],
dfSjOut[11:935,c(2,24)])
names(dfSjOutLag)
summary(mDynLag <- dynlm(total_cases ~ L(reanalysis_dew_point_temp_k, 9) +
L(reanalysis_specific_humidity_g_per_kg, 9) +
L(station_avg_temp_c, 11) +
L(station_min_temp_c, 11) +
year
#L(reanalysis_precip_amt_kg_per_m2, 2) #+
#L(total_cases, 1)
, data=dfSjOut[1:750,]))
names(dfSjOutLag)[1] <- "reanalysis_precip_amt_kg_per_m2"
predDyn <- predict(mDynLag, newdata = dfSjOutLag[762:925,], type = "response")
plotComp(c(dfSjOut[773:936,24]),
predDyn)
mean(abs(dfSjOut[773:936,24]-(predDyn)))
mean(abs(dfSjOut[773:936,24]-(predDyn+10)))
mean(abs(dfSjOut[773:936,24]-(predDyn+15)))
mean(abs(dfSjOut[773:936,24]-(predDyn+5)))
mean(abs(dfSjOut[773:936,24]-(predDyn+8)))
mean(abs(dfSjOut[773:936,24]-(predDyn+9)))
mean(abs(dfSjOut[773:936,24]-(predDyn+7)))
plotComp(c(dfSjOut[773:936,24]),
predDyn+8)
